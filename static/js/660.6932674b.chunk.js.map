{"version":3,"file":"static/js/660.6932674b.chunk.js","mappings":"oOACaA,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAE,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASvC,OARKJ,EAAU,CACdK,OAAQ,MACRC,IAAI,sCAADC,OAAwCR,EAAE,YAC7CS,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAElBV,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEuBS,EAAAA,EAAAA,GAAMb,GAAS,KAAD,EAAvB,OAAPC,EAAOC,EAAAY,KAAAZ,EAAAa,OAAA,SACNd,GAAO,aAAAC,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAAAA,EAAAc,GAAC,KAAD,oBAAAd,EAAAe,OAAA,GAAAnB,EAAA,kBAKjB,gBAjB6BoB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,K,2BCuC9B,EApCe,WACb,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,GAEZ,IAAAI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,IAEvBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAArC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAE,IAAAkC,EAAA,OAAApC,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGNV,EAAkBK,GAAI,KAAD,EAAjCkC,EAAG/B,EAAAY,KACXS,QAAQC,IAAIS,EAAIC,KAAKC,MACnBL,EAAUG,EAAIC,KAAKC,MAAKjC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAIxBqB,QAAQC,IAAGtB,EAAAc,IAAQ,yBAAAd,EAAAe,OAAA,GAAAnB,EAAA,kBAEtB,gBAXeoB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,KAYbY,EAAQX,EACV,GAAG,CAACA,IAEPE,QAAQC,IAAIK,GAGV,OACEO,EAAAA,EAAAA,KAAA,MAAAC,SACGR,EAAOS,KAAI,SAACC,GAAE,OAAMC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACnBD,EAAAA,EAAAA,KAAA,OAAKK,IAAKF,EAAGG,aAAY,mCAAAnC,OAAsCgC,EAAGG,cALrD,6EAKkFC,IAAKJ,EAAGK,QACnGR,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAGK,QACPJ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAYE,EAAGM,eAHMN,EAAGxC,GAI7B,KAIV,C","sources":["api/fetchMovieDetCast.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nexport const fetchMovieDetCast = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${id}/credits`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzAyNWQ0M2M1NDVhNDYyMjYyNWIwYTEyYjBlOTBiMSIsInN1YiI6IjY1ODZlMmNiNjg4Y2QwNTg1MDg0MWE3MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.dqtqhsupjJ-uMQuBN6kHOzvbhWQ0lKMjlVN2gMext14'\n    }\n  }\n  try {\n    const respons = await axios(options);\n    return respons;\n  }\n  catch (error) {\n    throw (error);\n  }\n}","import { fetchMovieDetCast } from \"api/fetchMovieDetCast\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\n  const Cast = () => {\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  const [isCast, setIsCast] = useState([])\n\n   useEffect(() => {\n     const getCast = async (id) => {\n\n     try {\n      const res = await fetchMovieDetCast(id);\n    console.log(res.data.cast);\n      setIsCast(res.data.cast)\n\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n     getCast(movieId)\n   }, [movieId])\n\nconsole.log(isCast);\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=300x300';\n\n  return (\n    <ul>\n      {isCast.map((el) => (<li key={el.id}>\n        <img src={el.profile_path ? `https://image.tmdb.org/t/p/w200/${el.profile_path}` : defaultImg} alt={el.name} />\n            <p>{el.name}</p>\n            <p>Character: {el.character}</p>\n     </li>))}\n\n    </ul>\n  )\n}\nexport default Cast;"],"names":["fetchMovieDetCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","options","respons","_context","prev","next","method","url","concat","params","language","headers","accept","Authorization","axios","sent","abrupt","t0","stop","_x","apply","arguments","movieId","useParams","console","log","_useState","useState","_useState2","_slicedToArray","isCast","setIsCast","useEffect","getCast","res","data","cast","_jsx","children","map","el","_jsxs","src","profile_path","alt","name","character"],"sourceRoot":""}